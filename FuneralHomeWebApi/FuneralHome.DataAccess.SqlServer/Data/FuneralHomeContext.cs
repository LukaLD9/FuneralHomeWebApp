// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace FuneralHome.DataAccess.SqlServer.Data.DbModels
{
    public partial class FuneralHomeContext : DbContext
    {
        public FuneralHomeContext()
        {
        }

        public FuneralHomeContext(DbContextOptions<FuneralHomeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Korisnik> Korisnik { get; set; }
        public virtual DbSet<Oglas> Oglas { get; set; }
        public virtual DbSet<Oprema> Oprema { get; set; }
        public virtual DbSet<Osiguranje> Osiguranje { get; set; }
        public virtual DbSet<Osmrtnica> Osmrtnica { get; set; }
        public virtual DbSet<Pogreb> Pogreb { get; set; }
        public virtual DbSet<PogrebOprema> PogrebOprema { get; set; }
        public virtual DbSet<SmrtniSlucaj> SmrtniSlucaj { get; set; }
        public virtual DbSet<Usluga> Usluga { get; set; }
        public virtual DbSet<VrstaOpreme> VrstaOpreme { get; set; }
        public virtual DbSet<VrstaUsluge> VrstaUsluge { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Korisnik>(entity =>
            {
                entity.Property(e => e.VrstaKorisnika).IsFixedLength();
            });

            modelBuilder.Entity<Oglas>(entity =>
            {
                entity.HasOne(d => d.Osmrtnica)
                    .WithMany(p => p.Oglas)
                    .HasForeignKey(d => d.OsmrtnicaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Oglas_Osmrtnica");

                entity.HasOne(d => d.SmrtniSlucaj)
                    .WithOne(p => p.Oglas)
                    .HasForeignKey<Oglas>(d => d.SmrtniSlucajId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Oglas_SmrtniSlucaj");
            });

            modelBuilder.Entity<Oprema>(entity =>
            {
                entity.Property(e => e.KolicinaNaSkladistu).IsFixedLength();

                entity.HasOne(d => d.VrstaOpreme)
                    .WithMany(p => p.Oprema)
                    .HasForeignKey(d => d.VrstaOpremeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Oprema_VrstaOpreme");
            });

            modelBuilder.Entity<Osiguranje>(entity =>
            {
                entity.HasOne(d => d.Korisnik)
                    .WithOne(p => p.Osiguranje)
                    .HasForeignKey<Osiguranje>(d => d.KorisnikId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Osiguranje_Korisnik");
            });

            modelBuilder.Entity<Pogreb>(entity =>
            {
                entity.HasOne(d => d.SmrtniSlucaj)
                    .WithOne(p => p.Pogreb)
                    .HasForeignKey<Pogreb>(d => d.SmrtniSlucajId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Pogreb_SmrtniSlucaj");

                entity.HasMany(d => d.Usluga)
                    .WithMany(p => p.Pogreb)
                    .UsingEntity<Dictionary<string, object>>(
                        "PogrebUsluga",
                        l => l.HasOne<Usluga>().WithMany().HasForeignKey("UslugaId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PogrebUsluga_Usluga1"),
                        r => r.HasOne<Pogreb>().WithMany().HasForeignKey("PogrebId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PogrebUsluga_Pogreb1"),
                        j =>
                        {
                            j.HasKey("PogrebId", "UslugaId");

                            j.ToTable("PogrebUsluga");
                        });
            });

            modelBuilder.Entity<PogrebOprema>(entity =>
            {
                entity.HasKey(e => new { e.PogrebId, e.OpremaId });

                entity.HasOne(d => d.Oprema)
                    .WithMany(p => p.PogrebOprema)
                    .HasForeignKey(d => d.OpremaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PogrebOprema_Oprema");

                entity.HasOne(d => d.Pogreb)
                    .WithMany(p => p.PogrebOprema)
                    .HasForeignKey(d => d.PogrebId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PogrebOprema_Pogreb");
            });

            modelBuilder.Entity<SmrtniSlucaj>(entity =>
            {
                entity.HasOne(d => d.Korisnik)
                    .WithMany(p => p.SmrtniSlucaj)
                    .HasForeignKey(d => d.KorisnikId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SmrtniSlucaj_Korisnik");
            });

            modelBuilder.Entity<Usluga>(entity =>
            {
                entity.Property(e => e.Cijena).IsFixedLength();

                entity.Property(e => e.Opis).IsFixedLength();

                entity.HasOne(d => d.VrstaUsluge)
                    .WithMany(p => p.Usluga)
                    .HasForeignKey(d => d.VrstaUslugeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Usluga_VrstaUsluge");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}